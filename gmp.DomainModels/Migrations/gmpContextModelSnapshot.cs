// <auto-generated />
using gmp.DomainModels.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace gmp.DomainModels.Migrations
{
    [DbContext(typeof(gmpContext))]
    partial class gmpContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("gmp.DomainModels.Entities.Attendance", b =>
                {
                    b.Property<int>("AttendanceId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("datetime");

                    b.Property<int>("EventId");

                    b.Property<int>("MemberId");

                    b.Property<string>("Notes")
                        .IsUnicode(false);

                    b.HasKey("AttendanceId");

                    b.HasIndex("EventId");

                    b.HasIndex("MemberId");

                    b.ToTable("Attendance");
                });

            modelBuilder.Entity("gmp.DomainModels.Entities.AttendanceEventActivityType", b =>
                {
                    b.Property<int>("AttendanceEventActivityTypeId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AttendanceId");

                    b.Property<int>("EventActivityTypeId");

                    b.HasKey("AttendanceEventActivityTypeId");

                    b.HasIndex("AttendanceId");

                    b.HasIndex("EventActivityTypeId");

                    b.ToTable("AttendanceEventActivityType");
                });

            modelBuilder.Entity("gmp.DomainModels.Entities.Contact", b =>
                {
                    b.Property<int>("ContactId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime");

                    b.Property<bool>("Deleted");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Fax")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("FirstName")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("LastName")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("MiddleName")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("Notes")
                        .IsUnicode(false);

                    b.Property<string>("Phone1")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("Phone2")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("Prefix")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("RoleId");

                    b.Property<int>("SchoolLocationId");

                    b.Property<string>("Suffix")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Title")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.HasKey("ContactId");

                    b.HasIndex("RoleId");

                    b.HasIndex("SchoolLocationId");

                    b.ToTable("Contact");
                });

            modelBuilder.Entity("gmp.DomainModels.Entities.Event", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .IsUnicode(false);

                    b.Property<DateTime?>("EventEndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("EventStartDate")
                        .HasColumnType("datetime");

                    b.Property<int>("EventTypeId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<int>("SchoolLocationId");

                    b.HasKey("EventId");

                    b.HasIndex("EventTypeId");

                    b.ToTable("Event");
                });

            modelBuilder.Entity("gmp.DomainModels.Entities.EventActivity", b =>
                {
                    b.Property<int>("EventActivityId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EventActivityTypeId");

                    b.Property<int>("EventId");

                    b.HasKey("EventActivityId");

                    b.HasIndex("EventActivityTypeId");

                    b.HasIndex("EventId");

                    b.ToTable("EventActivity");
                });

            modelBuilder.Entity("gmp.DomainModels.Entities.EventActivityType", b =>
                {
                    b.Property<int>("EventActivityTypeId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .IsUnicode(false);

                    b.HasKey("EventActivityTypeId");

                    b.ToTable("EventActivityType");
                });

            modelBuilder.Entity("gmp.DomainModels.Entities.EventType", b =>
                {
                    b.Property<int>("EventTypeId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.HasKey("EventTypeId");

                    b.ToTable("EventType");
                });

            modelBuilder.Entity("gmp.DomainModels.Entities.FeeSchedule", b =>
                {
                    b.Property<int>("FeeScheduleId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<decimal>("Discount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(5, 2)")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<int>("NumberOfPayments");

                    b.Property<int>("ProgramId");

                    b.HasKey("FeeScheduleId");

                    b.HasIndex("ProgramId");

                    b.ToTable("FeeSchedule");
                });

            modelBuilder.Entity("gmp.DomainModels.Entities.Level", b =>
                {
                    b.Property<int>("LevelId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int>("SchoolId");

                    b.Property<int?>("Value");

                    b.HasKey("LevelId");

                    b.HasIndex("SchoolId");

                    b.ToTable("Level");
                });

            modelBuilder.Entity("gmp.DomainModels.Entities.Member", b =>
                {
                    b.Property<int>("MemberId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<bool>("Deleted");

                    b.Property<int>("FeeScheduleId");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<int>("LevelId");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("Notes")
                        .IsUnicode(false);

                    b.Property<string>("Prefix")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("RoleId");

                    b.Property<int>("SchoolLocationId");

                    b.Property<string>("Suffix")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("MemberId");

                    b.HasIndex("FeeScheduleId");

                    b.HasIndex("LevelId");

                    b.HasIndex("RoleId")
                        .HasName("IX_Role");

                    b.HasIndex("SchoolLocationId")
                        .HasName("IX_SchoolLocation");

                    b.ToTable("Member");
                });

            modelBuilder.Entity("gmp.DomainModels.Entities.MemberEventActivity", b =>
                {
                    b.Property<int>("MemberEventActivityId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EventActivityId");

                    b.Property<int>("MemberId");

                    b.Property<string>("Notes")
                        .IsUnicode(false);

                    b.Property<string>("Result")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.HasKey("MemberEventActivityId");

                    b.HasIndex("EventActivityId");

                    b.HasIndex("MemberId");

                    b.ToTable("MemberEventActivity");
                });

            modelBuilder.Entity("gmp.DomainModels.Entities.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<int?>("FeeScheduleId");

                    b.Property<string>("Notes")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime");

                    b.Property<int>("TransactionTypeId");

                    b.HasKey("PaymentId");

                    b.HasIndex("FeeScheduleId");

                    b.HasIndex("TransactionTypeId");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("gmp.DomainModels.Entities.Program", b =>
                {
                    b.Property<int>("ProgramId")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("BaseFee")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<int>("DurationDays");

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<int>("SchoolId");

                    b.HasKey("ProgramId");

                    b.HasIndex("SchoolId");

                    b.ToTable("Program");
                });

            modelBuilder.Entity("gmp.DomainModels.Entities.Registration", b =>
                {
                    b.Property<int>("RegistrationId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EventActivityId");

                    b.Property<int>("MemberId");

                    b.Property<int?>("PaymentId");

                    b.HasKey("RegistrationId");

                    b.HasIndex("EventActivityId");

                    b.HasIndex("MemberId");

                    b.HasIndex("PaymentId");

                    b.ToTable("Registration");
                });

            modelBuilder.Entity("gmp.DomainModels.Entities.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int>("SchoolId");

                    b.HasKey("RoleId");

                    b.HasIndex("SchoolId");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("gmp.DomainModels.Entities.School", b =>
                {
                    b.Property<int>("SchoolId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.HasKey("SchoolId");

                    b.ToTable("School");
                });

            modelBuilder.Entity("gmp.DomainModels.Entities.SchoolLocation", b =>
                {
                    b.Property<int>("SchoolLocationId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address1")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("Address2")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("City")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime");

                    b.Property<bool>("Deleted");

                    b.Property<bool>("IsPrimary");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<int>("SchoolId");

                    b.Property<string>("StateCode")
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("Zip")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("SchoolLocationId");

                    b.HasIndex("SchoolId")
                        .HasName("IX_School");

                    b.ToTable("SchoolLocation");
                });

            modelBuilder.Entity("gmp.DomainModels.Entities.TransactionType", b =>
                {
                    b.Property<int>("TransactionTypeId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("TransactionTypeId");

                    b.ToTable("TransactionType");
                });

            modelBuilder.Entity("gmp.DomainModels.Entities.Attendance", b =>
                {
                    b.HasOne("gmp.DomainModels.Entities.Event", "Event")
                        .WithMany("Attendance")
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK_Attendance_Event");

                    b.HasOne("gmp.DomainModels.Entities.Member", "Member")
                        .WithMany("Attendance")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_Attendance_Member");
                });

            modelBuilder.Entity("gmp.DomainModels.Entities.AttendanceEventActivityType", b =>
                {
                    b.HasOne("gmp.DomainModels.Entities.Attendance", "Attendance")
                        .WithMany("AttendanceEventActivityType")
                        .HasForeignKey("AttendanceId")
                        .HasConstraintName("FK_AttendanceEventActivityType_Attendance");

                    b.HasOne("gmp.DomainModels.Entities.EventActivityType", "EventActivityType")
                        .WithMany("AttendanceEventActivityType")
                        .HasForeignKey("EventActivityTypeId")
                        .HasConstraintName("FK_AttendanceEventActivityType_EventActivityType");
                });

            modelBuilder.Entity("gmp.DomainModels.Entities.Contact", b =>
                {
                    b.HasOne("gmp.DomainModels.Entities.Role", "Role")
                        .WithMany("Contact")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_Contact_Role1");

                    b.HasOne("gmp.DomainModels.Entities.SchoolLocation", "SchoolLocation")
                        .WithMany("Contact")
                        .HasForeignKey("SchoolLocationId")
                        .HasConstraintName("FK_Contact_SchoolLocation");
                });

            modelBuilder.Entity("gmp.DomainModels.Entities.Event", b =>
                {
                    b.HasOne("gmp.DomainModels.Entities.EventType", "EventType")
                        .WithMany("Event")
                        .HasForeignKey("EventTypeId")
                        .HasConstraintName("FK_Event_EventType");
                });

            modelBuilder.Entity("gmp.DomainModels.Entities.EventActivity", b =>
                {
                    b.HasOne("gmp.DomainModels.Entities.EventActivityType", "EventActivityType")
                        .WithMany("EventActivity")
                        .HasForeignKey("EventActivityTypeId")
                        .HasConstraintName("FK_EventActivity_EventActivityType");

                    b.HasOne("gmp.DomainModels.Entities.Event", "Event")
                        .WithMany("EventActivity")
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK_EventActivity_Event");
                });

            modelBuilder.Entity("gmp.DomainModels.Entities.FeeSchedule", b =>
                {
                    b.HasOne("gmp.DomainModels.Entities.Program", "Program")
                        .WithMany("FeeSchedule")
                        .HasForeignKey("ProgramId")
                        .HasConstraintName("FK_FeeSchedule_Program");
                });

            modelBuilder.Entity("gmp.DomainModels.Entities.Level", b =>
                {
                    b.HasOne("gmp.DomainModels.Entities.School", "School")
                        .WithMany("Level")
                        .HasForeignKey("SchoolId")
                        .HasConstraintName("FK_Level_School");
                });

            modelBuilder.Entity("gmp.DomainModels.Entities.Member", b =>
                {
                    b.HasOne("gmp.DomainModels.Entities.FeeSchedule", "FeeSchedule")
                        .WithMany("Member")
                        .HasForeignKey("FeeScheduleId")
                        .HasConstraintName("FK_Member_FeeSchedule");

                    b.HasOne("gmp.DomainModels.Entities.Level", "Level")
                        .WithMany("Member")
                        .HasForeignKey("LevelId")
                        .HasConstraintName("FK_Member_Level");

                    b.HasOne("gmp.DomainModels.Entities.Role", "Role")
                        .WithMany("Member")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_Member_Role");

                    b.HasOne("gmp.DomainModels.Entities.SchoolLocation", "SchoolLocation")
                        .WithMany("Member")
                        .HasForeignKey("SchoolLocationId")
                        .HasConstraintName("FK_Member_SchoolLocation");
                });

            modelBuilder.Entity("gmp.DomainModels.Entities.MemberEventActivity", b =>
                {
                    b.HasOne("gmp.DomainModels.Entities.EventActivity", "EventActivity")
                        .WithMany("MemberEventActivity")
                        .HasForeignKey("EventActivityId")
                        .HasConstraintName("FK_MemberEventActivity_EventActivity");

                    b.HasOne("gmp.DomainModels.Entities.Member", "Member")
                        .WithMany("MemberEventActivity")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_MemberEventActivity_Member");
                });

            modelBuilder.Entity("gmp.DomainModels.Entities.Payment", b =>
                {
                    b.HasOne("gmp.DomainModels.Entities.FeeSchedule", "FeeSchedule")
                        .WithMany("Payment")
                        .HasForeignKey("FeeScheduleId")
                        .HasConstraintName("FK_Payment_FeeSchedule");

                    b.HasOne("gmp.DomainModels.Entities.TransactionType", "TransactionType")
                        .WithMany("Payment")
                        .HasForeignKey("TransactionTypeId")
                        .HasConstraintName("FK_Payment_TransactionType");
                });

            modelBuilder.Entity("gmp.DomainModels.Entities.Program", b =>
                {
                    b.HasOne("gmp.DomainModels.Entities.School", "School")
                        .WithMany("Program")
                        .HasForeignKey("SchoolId")
                        .HasConstraintName("FK_Program_School");
                });

            modelBuilder.Entity("gmp.DomainModels.Entities.Registration", b =>
                {
                    b.HasOne("gmp.DomainModels.Entities.Event", "Event")
                        .WithMany("Registration")
                        .HasForeignKey("EventActivityId")
                        .HasConstraintName("FK_Registration_EventActivity");

                    b.HasOne("gmp.DomainModels.Entities.Member", "Member")
                        .WithMany("Registration")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_Registration_Member");

                    b.HasOne("gmp.DomainModels.Entities.Payment", "Payment")
                        .WithMany("Registration")
                        .HasForeignKey("PaymentId")
                        .HasConstraintName("FK_Registration_Payment");
                });

            modelBuilder.Entity("gmp.DomainModels.Entities.Role", b =>
                {
                    b.HasOne("gmp.DomainModels.Entities.School", "School")
                        .WithMany("Role")
                        .HasForeignKey("SchoolId")
                        .HasConstraintName("FK_Role_School");
                });

            modelBuilder.Entity("gmp.DomainModels.Entities.SchoolLocation", b =>
                {
                    b.HasOne("gmp.DomainModels.Entities.School", "School")
                        .WithMany("SchoolLocation")
                        .HasForeignKey("SchoolId")
                        .HasConstraintName("FK_SchoolLocation_School");
                });
#pragma warning restore 612, 618
        }
    }
}
